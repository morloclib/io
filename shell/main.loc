module io.shell
-- import stream (Stream, takeS)
-- import core (ifelse)

-- export headF
-- export takeS
-- export streamLinesTextF
-- export streamLinesGzipF
export writeLinesF
export hasExtensionF
export printL
export isgzF
export isFastq


source Py from "shell.py"
  ( "streamLinesTextF"
  , "streamLinesGzipF"
  , "writeLinesF"
  , "printL"
  , "isgzF"
  , "hasExtensionF"
  , "headF"
  )

type Filename = Str
type Py Filename = "str"

-- streamLinesTextF :: Filename -> Stream Str
-- streamLinesTextF Py :: "str" -> "iterator" "str"
--
-- streamLinesGzipF :: Filename -> Stream Str
-- streamLinesGzipF Py :: "str" -> "iterator" "str"

writeLinesF :: [Str] -> Filename -> ()
writeLinesF Py :: ["str"] -> "str" -> "None"

printL :: [Str] -> ()
printL Py :: ["str"] -> "None"

isGzipF :: Filename -> Bool
isGzipF Py :: "str" -> "bool"

isFastqF :: Filename -> Bool
isFastqF Py :: "str" -> "bool"

hasExtensionF :: Str -> Filename -> Bool

-- headF :: Int -> Filename -> ()
-- headF Py :: "int" -> "str" -> "None"
--
-- headF n f = printL (ifelse (isgzF f) (takeS n (streamLinesGzipF f)) (takeS n (streamLinesTextF f)))
